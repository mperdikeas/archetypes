#create an object of the RoleSecurityJdbcRealm
#IniShiroFilter will inject that object into the SecurityManager
[main]
realmA = shirorealm.GaiaJdbcRealm
realmA.permissionsLookupEnabled = true
realmA.dataSourceURL = java:/usermgmnt



#passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
passwordMatcher.hashIterations = 1000000
passwordMatcher.hashAlgorithmName = SHA-256
realmA.credentialsMatcher = $passwordMatcher

# following two lines added by MP (http://stackoverflow.com/questions/8754800/cachemanager-properties-have-been-set-apache-shiro)
# but I now remove them cause we are using not the built-in memory-constrained cache manager but rather the EhCacheManager
# builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
# securityManager.cacheManager = $builtInCacheManager

################################################################
################################################################
################################################################


#sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
#securityManager.sessionManager = $sessionManager
#sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
#sessionDAO.activeSessionsCacheName = active-sessions-foo
#sessionManager.sessionDAO = $sessionDAO 
# the following convenience method is only available for the DefaultWebSessionManager, not the default 
# ServletContainerSessionManager (surprisingly, the DefaultWebSessionManager is not the default, rather,
# the ServletContainerSessionManager is)
#securityManager.sessionManager.sessionIdCookie.path = / # line-34


# Configure The EhCacheManager:
#cacheManager = memcachedshirocachemanager.MemCachedCacheManager
##cacheManager.cacheManagerConfigFile = classpath:ehcache.xml #<-- we don't need that any more

# Configure the above CacheManager on Shiro's SecurityManager
# to use it for all of Shiro's caching needs:
#securityManager.cacheManager = $cacheManager

################################################################
################################################################
################################################################

# specify login page
authc.loginUrl = /login.xhtml
[filters]
roles.unauthorizedUrl = /unauthorized.xhtml
perms.unauthorizedUrl = /unauthorized.xhtml
[urls]
# I've established that you can't do a logical AND or OR for roles, the way to do it is via permissions: http://shiro-user.582556.n2.nabble.com/Allowing-Multiple-Roles-To-Access-A-URL-td2570736.html
/staff/**  = authc, perms[secure]
/admin/**  = authc, roles[admin]
/user/**   = authc, roles[user]
/cacher/** = authc, perms[can_cache]

