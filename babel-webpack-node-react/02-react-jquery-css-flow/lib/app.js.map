{"version":3,"sources":["../app/app.js"],"names":["require","_","utils","$","React","cx","data","name","type","description","followers","worksWithReactabular","id","columns","property","header","headerClass","cell","works","App","createClass","propTypes","msg","PropTypes","string","isRequired","render","b","a","c","rest","JSON","stringify","props"],"mappings":";;;;;;AAOA;;;;AANAA,QAAQ,iBAAR;AACA,IAAUC,IAAID,QAAQ,QAAR,CAAd;AACA,IAAME,QAAQF,QAAQ,mBAAR,CAAd;AACA,IAAUG,IAAIH,QAAQ,QAAR,CAAd;AACA,IAAMI,QAAQJ,QAAQ,OAAR,CAAd;AACA,IAASK,KAAKL,QAAQ,YAAR,CAAd;;;AAGA,IAAIM,OAA8H,CAC9H;AACIC,UAAM,UADV;AAEIC,UAAM,SAFV;AAGIC,iBAAa,oCAHjB;AAIIC,eAAW,KAJf;AAKIC,0BAAsB,IAL1B;AAMIC,QAAI;AANR,CAD8H,EAS9H;AACIL,UAAM,YADV;AAEIC,UAAM,WAFV;AAGIC,iBAAa,0EAHjB;AAIIC,eAAW,KAJf;AAKIC,0BAAsB,KAL1B;AAMIC,QAAI;AANR,CAT8H,EAiB9H;AACIL,UAAM,SADV;AAEIC,UAAM,WAFV;AAGIC,iBAAa,oCAHjB;AAIIC,eAAW,GAJf;AAKIC,0BAAsB,KAL1B;AAMIC,QAAI;AANR,CAjB8H,CAAlI;;AA6BA,IAAIC,UAAuF,CACvF;AACIC,cAAU,MADd;AAEIC,YAAQ,MAFZ;AAGIC,iBAAaX,GAAG,EAAC,eAAe,IAAhB,EAAH;AAHjB,CADuF,EAMvF;AACIS,cAAU,MADd;AAEIC,YAAQ;AAFZ,CANuF,EAUvF;AACID,cAAU,aADd;AAEIC,YAAQ;AAFZ,CAVuF,EAcvF;AACID,cAAU,WADd;AAEIC,YAAQ,WAFZ;AAGI;AACAE,UAAM,cAACP,SAAD;AAAA,eAAeA,YAAaA,YAAY,GAAxC;AAAA;AAJV,CAduF,EAoBvF;AACII,cAAU,sBADd;AAEIC,YAAQ,uBAFZ;AAGI;AACAE,UAAM,cAACC,KAAD;AAAA,eAAWA,SAAS;AAAA;AAAA;AAAA;AAAA,SAApB;AAAA;AAJV,CApBuF,CAA3F;;AA8BA,IAAMC,MAAMf,MAAMgB,WAAN,CAAkB;AAAA;;AAC1BC,eAAW;AACPC,aAAKlB,MAAMmB,SAAN,CAAgBC,MAAhB,CAAuBC;AADrB,KADe;AAI1BC,YAAQ,kBAAW;AAAA,qBACM,EAACC,GAAG,CAAJ,EAAOC,GAAE,CAAT,EAAYC,GAAG,CAAf,EADN;AAAA,YACRD,CADQ,UACRA,CADQ;AAAA,YACFE,IADE;;AAEf,eACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAC8C;AAAA;AAAA;AAAIC,yBAAKC,SAAL,CAAeF,IAAf,MAAuBC,KAAKC,SAAL,CAAe,EAACL,GAAE,CAAH,EAAME,GAAE,CAAR,EAAf,CAAvB,GACF,KADE,GAEF;AAFF;AAD9C,aADJ;AAMI;AAAA;AAAA;AAAK,qBAAKI,KAAL,CAAWX;AAAhB,aANJ;AAOI,sDAAO,SAAST,OAAhB,EAAyB,MAAMP,IAA/B;AAPJ,SADJ;AAWH;;AAjByB,CAAlB,CAAZ;;AAsBA;AACA,IAAMsB,IAAa,cAAnB;;kBAGeT,G","file":"app.js","sourcesContent":["/* @flow */\nrequire('./css/style.css');\nconst     _ = require('lodash');\nconst utils = require('./scripts/util.js');\nconst     $ = require('jquery');\nconst React = require('react');\nvar      cx = require('classnames');\nimport {Table} from 'reactabular';\n\nvar data:Array<{name: string, type: string, description: string, followers: number, worksWithReactabular: boolean, id: number}> = [\n    {\n        name: 'React.js',\n        type: 'library',\n        description: 'Awesome library for handling view.',\n        followers: 23252,\n        worksWithReactabular: true,\n        id: 123\n    },\n    {\n        name: 'Angular.js',\n        type: 'framework',\n        description: 'bloated; comes from Microsoft (yikes); really does a lot of stuff wrong.',\n        followers: 35159,\n        worksWithReactabular: false,\n        id: 456\n    },\n    {\n        name: 'Aurelia',\n        type: 'framework',\n        description: 'Framework for the next generation.',\n        followers: 229,\n        worksWithReactabular: false,\n        id: 789\n    },\n];\n\n\n\nvar columns: Array<{property: string, header: string, headerClass?: ?string, cell?: F2}> = [\n    {\n        property: 'name',\n        header: 'Name',\n        headerClass: cx({'name-column': true})\n    },\n    {\n        property: 'type',\n        header: 'Type'\n    },\n    {\n        property: 'description',\n        header: 'Description'\n    },\n    {\n        property: 'followers',\n        header: 'Followers',\n        // accuracy per hundred is enough for demoing\n        cell: (followers) => followers - (followers % 100)\n    },\n    {\n        property: 'worksWithReactabular',\n        header: '1st Class Reactabular',\n        // render UTF ok if works\n        cell: (works) => works && <span>&#10003;</span>\n    }\n];\n\n\n\nconst App = React.createClass({\n    propTypes: {\n        msg: React.PropTypes.string.isRequired\n    },\n    render: function() {\n        const {a, ...rest} = {b: 2, a:1, c: 3};\n        return (\n            <div>\n                <div>\n                Rest property destructuring assignment works? <b>{JSON.stringify(rest)===JSON.stringify({b:2, c:3})\n                                                               ?\"yes\"\n                                                               :\"sadly no\"}</b>\n                </div>\n                <h1>{this.props.msg}</h1>\n                <Table columns={columns} data={data}/>\n            </div>\n        );\n    }\n\n\n});\n\n// $SuppressFlowFinding: this is just to showcase the functionality\nconst a : number = 'anything but';\n\n\nexport default App;\n\n"]}